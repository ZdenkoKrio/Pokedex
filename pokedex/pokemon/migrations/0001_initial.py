# Generated by Django 5.2.5 on 2025-08-30 08:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Generation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='ApiResourceCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
                ('payload', models.JSONField()),
                ('etag', models.CharField(blank=True, default='', max_length=128)),
                ('last_modified', models.CharField(blank=True, default='', max_length=128)),
                ('fetched_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['fetched_at'], name='pokemon_api_fetched_ac7f81_idx'), models.Index(fields=['expires_at'], name='pokemon_api_expires_d25df1_idx')],
            },
        ),
        migrations.CreateModel(
            name='EvolutionChainCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain_id', models.PositiveIntegerField(unique=True)),
                ('species_ids', models.JSONField(blank=True, default=list)),
                ('root_species_id', models.PositiveIntegerField(blank=True, null=True)),
                ('fetched_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['chain_id'], name='pokemon_evo_chain_i_3a6c5f_idx'), models.Index(fields=['root_species_id'], name='pokemon_evo_root_sp_6c27a9_idx'), models.Index(fields=['fetched_at'], name='pokemon_evo_fetched_3ce1b4_idx')],
            },
        ),
        migrations.CreateModel(
            name='PokemonCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokeapi_id', models.PositiveIntegerField(unique=True)),
                ('name', models.CharField(db_index=True, max_length=64)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('weight', models.PositiveIntegerField(blank=True, null=True)),
                ('base_stats', models.JSONField(default=dict)),
                ('is_legendary', models.BooleanField(default=False)),
                ('is_mythical', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('abilities', models.ManyToManyField(blank=True, related_name='pokemon', to='pokemon.ability')),
                ('generation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pokemon', to='pokemon.generation')),
                ('types', models.ManyToManyField(blank=True, related_name='pokemon', to='pokemon.type')),
            ],
            options={
                'ordering': ['pokeapi_id'],
                'indexes': [models.Index(fields=['updated_at'], name='pokemon_pok_updated_84ccf9_idx'), models.Index(fields=['is_legendary'], name='pokemon_pok_is_lege_5e20fa_idx'), models.Index(fields=['is_mythical'], name='pokemon_pok_is_myth_0d1466_idx')],
            },
        ),
    ]
